1. Create a git repo and clone it in local.
2. Create a mycode.py file and add some code to it. (This will save a CSV file to a new "Data" folder).
3. To install DVC in your local machine run pip install dvc.
4. dvc init creates .dvcignore file and .dvc folder.
5. We created a new directory and we assume that for this tutorial our data is stored or data comes from that folder.
6. Next just like we have to set a location for our git in github we have to set a location for dvc as well, for that we use
    dvc remote add -d myremote <folder-location>
7. Now we have do dvc add /<data-location>. This simply means that we are telling dvc that you are now responsible to track the changes in the 
    data folder that we are going to make
8. When we do dvc commit and dvc push, we can store the data along with the unique id for that data in the location that we had 
   initialised dvc with. For each push, dvc pushes 2 files, one with the unique identifier and another with the actual data.
9. Now we will make changes to the mycode.py file to add a few rows in the data and then check if everything works and dvc actually
   tracks our data using dvc status.


***IMP*** when we set the data location for dvc using remove, we can also give S3 link in folder location and it will set that  
            location as the location of the data i.e. where it has to store the data. And when we do dvc add <data-location> it understands that it 
            has to keep a track of the data which is going to be changed inside that location.


***IMP*** If we have already uploaded or asked git to track changes in the data folder or location then it is not possible for dvc
          to keep a track of the changes. We can only track the data which is not tracked by git by using dvc.


***IMP*** In our case as we have the source data folder on our local, git will keep a track of it but this data should not be on our 
          local machine as the data will be huge and should be on remote servers.


##########################################################################################################
DVC - flow

pip install dvc
dvc init 
dvc remote add -d myremote <folder-location>
dvc add /data
dvc status
dvc commit 
dvc push
dvc status

***IMP** If we want to rollback to some previous data then what we do is we run git log --oneline, copy the sha id and then 
         run git checkout <sha_id> this will take us back to the version of code as expected, and here if we run dvc status, then   
         dvc will say that there are few modified files, then to get the data which was in accordance with that code version, we
         run dvc pull.